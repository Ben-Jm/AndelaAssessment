import datetime
class user:
    def __init__(self, name):
        self.__name = name
        self.__is_logged_in = False
        self.__last_logged_in = None
  
    def name(self):
        return self.__name
    
    def name(self, value):
        self.__name = value
  
    def is_logged_in(self):
        return self.__is_logged_in
  
    def last_logged_in_at(self):
        return self.__last_logged_in
  
    def log_in(self):
        self.__is_logged_in = True
        self.__last_logged_in = datetime.datetime.now()
  
    def log_out(self):
        self.__is_logged_in = False
  
    def can_edit(self, comment):
        return permission.can_edit(comment, self)
  
    def can_delete(self, comment):
        return permission.can_delete(comment, self)
  
    def to_string(self):
        return self.__name
    
class moderator(user):
    def __init__(self, name):
        self.__name = name
        self.__is_logged_in = False
        

class admin(moderator):
    def __init__(self, name):
        self.__name = name
        self.__is_logged_in = False


class comment:
    def __init__(self, author, message, replied_to = None):
        self.__author = author
        self.__message = message
        self.__replied_to = replied_to
        self.__created_at = datetime.datetime.now()
    
    def author(self):
        return self.__author
  
    def author(self, value):
        self.__author = value
    
    def message(self):
        return self.__message
  
    def message(self, value):
        self.__message = message
    
    def created_at(self):
        return self.__created_at
  
    def replied_to(self):
        return self.__replied_to
  
    def replied_to(self, value):
        self.__replied_to = value
  
    def to_string(self):
        comment_string = "{} by {}".format(
            self.__message,
            self.author.to_string()
        )
        if self.__replied_to:
            comment_string = "{} (replied to {})".format(
            comment_string,
            self.__replied_to.author.to_string()
        )
        return comment_string
